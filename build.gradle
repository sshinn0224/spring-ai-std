plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'spring-ai'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springAiVersion', "1.0.2")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.ai:spring-ai-starter-model-openai'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'io.netty:netty-resolver-dns-native-macos:4.1.100.Final:osx-aarch_64'

    // spring ai
    implementation 'org.springframework.ai:spring-ai-pdf-document-reader'
    implementation 'org.springframework.ai:spring-ai-tika-document-reader'
    implementation 'org.springframework.ai:spring-ai-jsoup-document-reader'
    implementation 'org.springframework.ai:spring-ai-rag'


    // vector store
    implementation 'org.springframework.ai:spring-ai-starter-vector-store-pgvector'

    // chat memory
    implementation 'org.springframework.ai:spring-ai-advisors-vector-store'
    // jdbc
    implementation 'org.postgresql:postgresql:42.7.5'
//    implementation 'org.springframework.ai:spring-ai-starter-model-chat-memory-repository-jdbc'
    // cassandra
    implementation 'org.springframework.ai:spring-ai-starter-model-chat-memory-repository-cassandra'
    //

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
